syntax = "proto3";

package com.chenerzhu.crawler.proxy.protobufs.steammessages_auth;

// 导入基础消息
import "steammessages_base.proto";
import "steammessages_unified_base.steamclient.proto";
import "nums.proto";

// 请求：获取 RSA 公钥
message CAuthentication_GetPasswordRSAPublicKey_Request {
    string account_name = 1; // 用户提供的账户名称以获取 RSA 密钥
}

// 响应：获取 RSA 公钥
message CAuthentication_GetPasswordRSAPublicKey_Response {
    string publickey_mod = 1; // 公钥模数
    string publickey_exp = 2;  // 公钥指数
    uint64 timestamp = 3;       // 密钥生成的时间戳
}

// 请求：通过二维码开始认证会话
message CAuthentication_BeginAuthSessionViaQR_Request {
    string device_friendly_name = 1; // 设备友好名称
    EAuthTokenPlatformType platform_type = 2; // 平台类型
}

// 响应：通过二维码开始认证会话
message CAuthentication_BeginAuthSessionViaQR_Response {
    uint64 client_id = 1; // 请求者的唯一标识符
    string challenge_url = 2; // 基于客户端 ID 的 URL
    bytes request_id = 3; // 请求 ID
    int32 interval = 4; // 刷新间隔
    repeated CAuthentication_AllowedConfirmation allowed_confirmations = 5; // 允许的确认类型
    uint32 version = 6; // QR 数据的版本
}

// 允许的确认类型
message CAuthentication_AllowedConfirmation {
    EAuthSessionGuardType confirmation_type = 1; // 确认类型
    string associated_message = 2; // 与确认类型相关的消息
}

// 请求：通过凭据开始认证会话
message CAuthentication_BeginAuthSessionViaCredentials_Request {
    string device_friendly_name = 1; // 设备友好名称
    string account_name = 2; // 账户名称
    string encrypted_password = 3; // RSA 加密的密码
    uint64 encryption_timestamp = 4; // 映射到密钥的时间戳
    bool remember_login = 5; // 是否记住登录
    EAuthTokenPlatformType platform_type = 6; // 平台类型
    ESessionPersistence persistence = 7; // 会话持久性
    string website_id = 8; // 客户端请求认证的标识符
}

// 响应：通过凭据开始认证会话
message CAuthentication_BeginAuthSessionViaCredentials_Response {
    uint64 client_id = 1; // 请求者的唯一标识符
    bytes request_id = 2; // 请求 ID
    int32 interval = 3; // 刷新间隔
    repeated CAuthentication_AllowedConfirmation allowed_confirmations = 4; // 允许的确认类型
    uint64 steamid = 5; // 登录的账户的 Steam ID
    string weak_token = 6; // 部分认证令牌
}

// 请求：轮询认证会话状态
message CAuthentication_PollAuthSessionStatus_Request {
    uint64 client_id = 1; // 客户端 ID
    bytes request_id = 2; // 请求 ID
    bytes token_to_revoke = 3; // 要撤销的令牌
}

// 响应：轮询认证会话状态
message CAuthentication_PollAuthSessionStatus_Response {
    uint64 new_client_id = 1; // 新的客户端 ID
    string new_challenge_url = 2; // 新的挑战 URL
    string refresh_token = 3; // 新的刷新令牌
    string access_token = 4; // 新的访问令牌
    bool had_remote_interaction = 5; // 是否有远程交互
    string account_name = 6; // 认证账户的名称
}

// 认证平台类型枚举
enum EAuthTokenPlatformType {
    k_EAuthTokenPlatformType_Unknown = 0;
    k_EAuthTokenPlatformType_SteamClient = 1;
    k_EAuthTokenPlatformType_WebBrowser = 2;
    k_EAuthTokenPlatformType_MobileApp = 3;
}

// 会话持久性枚举
enum ESessionPersistence {
    k_ESessionPersistence_Invalid = 0;
    k_ESessionPersistence_Persistent = 1;
    k_ESessionPersistence_Ephemeral = 2;
}

// 认证会话保护类型枚举
enum EAuthSessionGuardType {
    k_EAuthSessionGuardType_Unknown = 0;
    k_EAuthSessionGuardType_None = 1;
    k_EAuthSessionGuardType_EmailCode = 2;
    k_EAuthSessionGuardType_DeviceCode = 3;
    k_EAuthSessionGuardType_DeviceConfirmation = 4;
    k_EAuthSessionGuardType_EmailConfirmation = 5;
    k_EAuthSessionGuardType_MachineToken = 6;
}

// 其他消息结构可以根据需要继续定义...