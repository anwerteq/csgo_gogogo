debug=false
#=======log========#
logging.file=
logging.level.root=info
logging.level.org.springframework.web=info
logging.level.org.hibernate=ERROR
logging.level.com.chenerzhu.crawler.proxy.pool.job.ValidateCacheSchedulerJob=info
logging.level.com.chenerzhu.crawler.proxy.pool.job.ValidateSchedulerJob=info
#port
server.port=8001
# THYMELEAF
spring.thymeleaf.encoding=UTF-8
# 热部署静态文件
spring.thymeleaf.cache=false
# 使用HTML5标准
spring.thymeleaf.mode=HTML5

spring.config.encoding=UTF-8

#=====datasource=======#
#spring.datasource.url=jdbc:mysql://45.144.136.173:3306/test?useSSL=false&useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&serverTimezone=Asia/Shanghai
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/csgo?useSSL=false&useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&serverTimezone=Asia/Shanghai
spring.datasource.url=jdbc:mysql://45.152.66.112:3306/csgo?useSSL=false&useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&serverTimezone=Asia/Shanghai
#spring.datasource.url=jdbc:postgresql://45.144.136.173:5432/csgo
spring.datasource.username=root
spring.datasource.password=QingLiu98!
#spring.datasource.password=kdjwaQ5623+
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.data.jpa.show-sql=false #打印执行的sql语句，false则不打印sql
spring.jpa.properties.hibernate.show_sql=false
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
spring.datasource.druid.initial-size=30
spring.datasource.druid.min-idle=10
spring.datasource.druid.maxActive=1000
spring.datasource.druid.maxWait=60000
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
spring.datasource.druid.minEvictableIdleTimeMillis=300000
spring.datasource.druid.validationQuery=SELECT 1 FROM DUAL
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnBorrow=false
spring.datasource.druid.testOnReturn=false
spring.datasource.druid.poolPreparedStatements=true
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.druid.connectionErrorRetryAttempts=3
spring.datasource.druid.breakAfterAcquireFailure=true
spring.datasource.druid.timeBetweenConnectErrorMillis=300000
spring.datasource.druid.asyncInit=true
spring.datasource.druid.remove-abandoned=true
spring.datasource.druid.remove-abandoned-timeout=1800
spring.datasource.druid.transaction-query-timeout=6000
spring.datasource.druid.filters=stat,wall,log4j2
spring.datasource.druid.connectionProperties=druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
spring.datasource.tomcat.max-active=10
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#=====redis===========#
spring.redis.host=45.152.66.112
spring.redis.port=6379
spring.redis.password=
#=====cluster====#
#spring.redis.cluster.nodes[0]=XXXXX
#spring.redis.cluster.nodes[1]=XXXXX
#spring.redis.cluster.nodes[2]=XXXXX
#spring.redis.cluster.nodes[3]=XXXXX
#spring.redis.cluster.nodes[4]=XXXXX
#spring.redis.cluster.nodes[5]=XXXXX
#spring.redis.password=XXXXX

# 连接超时时间（毫秒）
spring.redis.timeout=10000
# Redis默认情况下有16个分片，这里配置具体使用的分片，默认是0
spring.redis.database=8
# 连接池最大连接数（使用负值表示没有限制） 默认 8
spring.redis.lettuce.pool.max-active=20
# 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
spring.redis.lettuce.pool.max-wait=30000
# 连接池中的最大空闲连接 默认 8
spring.redis.lettuce.pool.max-idle=20
# 连接池中的最小空闲连接 默认 0
spring.redis.lettuce.pool.min-idle=0
buff_session=Device-Id=L6MNiAzmDqdL4eisDSix; Locale-Supported=zh-Hans; game=csgo; SL_G_WPT_TO=zh; SL_GWPT_Show_Hide_tmp=1; SL_wptGlobTipTmp=1; NTES_YD_SESS=rz9ztuOj3BRRVmlBFkoMgoiMX31SRBulFyusE9wJNNtTxaw1xYbLveY4T0cXOJzAZi01DkD80toNYtlvckKCCxBUX1Ol0zRO9y0rSxghVSB.C1JfiSqoGuysn1se3VEGKrb12jiMNv242aZhYxqWMzVYZe7lnNItBpET1Zwyi3ebHuKpOQLzmoyxXZSC._JDovkWqMETXCPAyE9un0fwzIKpFiYkvoUWTRSrSBJGqNIqS; S_INFO=1733267874|0|0&60##|15347971344; P_INFO=15347971344|1733267874|1|netease_buff|00&99|null&null&null#shh&null#10#0|&0||15347971344; remember_me=U1103739664|5xawCTSMauvzpnDyprKc5Zl0zyRcNqWj; session=1-35ci_EXI1xezn6rEOA5kfnKjQVWWJJYCVzXAozs2xgQM2030511176; csrf_token=IjIxOWNlNTkxNDFmZjlhOWNkZmE2MzRjNzcyZDkyOTA0MmIyYmQ0ZjQi.Z1GxDg.Dc-ePwBK4VT7hKgguNy_0G75sJE
steam_session=
proxyIp=127.0.0.1:7890
# 使用 Ehcache 作为缓存管理器
spring.cache.type=ehcache
# 指定 Ehcache 配置文件的位置
spring.cache.ehcache.config=classpath:ehcache.xml
# sda文件的路径
sda_path=C:\\Users\\24970\\Desktop\\account-number\\开通市场的sda账号\\mu64KKRO
#自动确认收货开关
auto_trader=true
#steam账号自动下订单(csgo,dota2)
auto_sale=csgo1
#购买条件下限 卡价 0.7,填写0.9，利润是两成
sales_ratio_min=0.70
#购买条件上限 卡价 0.7,填写1.1，利润是两成
sales_ratio_max=2
#自动上架buff
buff_on_the_shelves=false
## 网易buff账号密码信息 格式  账号-密码  例子：   17589321543-765421。多个账号通过逗号分割，例如:17589321543-765421,17589321545-765421
buff.account_information=15347971344-QingLiu98!
#浏览器复制buff的session填入
buff.buff_cookies=
#Microsoft Edge v118.0.2088.57 64位版（2023-10-19更新）
#https://go.microsoft.com/fwlink/?LinkID=2093437
#均值比例 下限
mean_ratio_min=0.9
#均值比例 上限
mean_ratio_max=1.1
#steam求购是：1,steam扫地磨损是：2
want_to_buy=1
#buff不压价的用户（设置成自己的id）多个使用逗号拼接,比如 U1106549293,U1106549294. 不填就是不压价
buff_user_id=
#steam市场饰品自动下架 true false
auto_unlistings=false
#买美金卡时,一美金的成本
cark_cost=6
#自动标记成本
auto_remark=true


spring.jpa.properties.hibernate.format_sql=true

hibernate.jdbc.batch_size=50
hibernate.order_inserts=true
hibernate.order_updates=true
hibernate.generate_statistics=true


# Hibernate SQL 和参数日志
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Spring Data JPA 日志
logging.level.org.springframework.data.jpa.repository=DEBUG
